initSidebarItems({"enum":[["Language",""],["Plugin",""],["PluginError",""],["PluginType",""],["StyleValidationStrategy","Determines how style errors are handled."]],"fn":[["compress_project_to_zip","See `LanguagePlugin::compress_project`."],["extract_project","Finds the correct language plug-in for the given exercise path and calls `LanguagePlugin::extract_project`, If no language plugin matches, see `extract_project_overwrite`."],["extract_project_overwrite","Extract a given archive file containing a compressed project to a target location. This will overwrite any existing files."],["get_language_plugin",""],["get_language_plugin_type",""]],"mod":[["tmc_zip","Contains functions for zipping and unzipping projects."]],"struct":[["AntPlugin",""],["ExerciseDesc","A description of an exercise."],["ExercisePackagingConfiguration","Represents configuration based on which submission may be packaged."],["MakePlugin",""],["MavenPlugin",""],["NoTestsPlugin",""],["NothingIsStudentFilePolicy","Mock policy that ignores the config file and returns false for all files."],["Python3Plugin",""],["RPlugin",""],["RunResult","The result of running an exerciseâ€™s test suite against a submission."],["StyleValidationResult","The result of a style check."]],"trait":[["StudentFilePolicy","Specifies which files are student files. A single StudentFilePolicy is only valid for a single project as it uses a config file to determine its output."]]});