name: Run tests

on:
  push:
    branches: [main, "[0-9]+.[0-9]+"]
  pull_request_target:
    branches: [main, "[0-9]+.[0-9]+"]

env:
  RUST_LOG: debug,j4rs=warn
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: "-C debuginfo=0"
  JAVA_HOME: ${{ env.JAVA_HOME_11_X64 }}  # seems to default to 8 on Windows and Mac

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy
      - name: Cache
        uses: Swatinem/rust-cache@v2

      - name: Diagnostics on Windows
        if: matrix.os == 'windows-latest'
        run: "gci env:"

      - name: Rustfmt
        run: cargo fmt -- --check
      - name: Clippy
        if: matrix.os == 'ubuntu-latest'
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

      - name: Build test binary
        run: cargo test --no-run

      - name: Install dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update -y
          sudo apt install -y check valgrind  # required for make plugin
          sudo apt install -y libcurl4-gnutls-dev libgit2-dev # required for R

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install C#
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "6.0.x"

      - name: Install R
        if: matrix.os == 'ubuntu-latest'
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: "4.2.2"
      - name: Install tmc-r-tester
        if: matrix.os == 'ubuntu-latest'
        run: |
          Rscript -e 'install.packages(c("testthat", "jsonlite", "R.utils"))'
          Rscript -e 'install.packages("crates/plugins/r/tests/tmcRtestrunner", repos=NULL, type="source")'

      - name: Run tests
        run: cargo test --no-fail-fast
