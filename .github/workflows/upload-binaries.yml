name: Upload CLI binaries

on:
  release:
    types:
      - created

env:
  TAG: ${{ github.event.release.tag_name }} # had some issue using this directly on windows

jobs:
  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [i686-pc-windows-msvc, x86_64-pc-windows-msvc]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
      - name: Build # crt-static is set with RUSTFLAGS to statically link MSVCRT (VCRUNTIME140.dll)
        run: |
          rustup target add ${{ matrix.target }}
          $env:RUSTFLAGS="-C target-feature=+crt-static"
          cargo build -p tmc-langs-cli --release --verbose --target ${{ matrix.target }}
          cd ./bindings/tmc-langs-node && npm install && npm run build -- --release --target ${{ matrix.target }}
      - name: Deploy
        run: |
          $env:python_version=$(python -c 'import sys; print(\".\".join(map(str, sys.version_info[:3])))')
          $env:CLOUDSDK_PYTHON="C:\hostedtoolcache\windows\Python\$env:python_version\x64\python"
          gsutil cp target/${{ matrix.target }}/release/tmc-langs-cli.exe gs://${{ secrets.GCP_BUCKET }}/tmc-langs-rust/tmc-langs-cli-${{ matrix.target }}-$Env:TAG.exe
          gsutil cp bindings/tmc-langs-node/ts/functions.node             gs://${{ secrets.GCP_BUCKET }}/tmc-langs-rust/tmc-langs-${{ matrix.target }}-$Env:TAG.node

  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
      - name: Cargo build
        run: |
          cargo build -p tmc-langs-cli --release --verbose
          npm --prefix ./bindings/tmc-langs-node install
          npm run --prefix ./bindings/tmc-langs-node build -- --release
      - name: Sign
        run: codesign --force -s - target/release/tmc-langs-cli
      - name: Deploy
        run: |
          gsutil cp target/release/tmc-langs-cli              gs://${{ secrets.GCP_BUCKET }}/tmc-langs-rust/tmc-langs-cli-x86_64-apple-darwin-$TAG
          gsutil cp bindings/tmc-langs-node/ts/functions.node gs://${{ secrets.GCP_BUCKET }}/tmc-langs-rust/tmc-langs-x86_64-apple-darwin-$TAG.node

  ubuntu:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y gcc-multilib  # required to build for 32-bit arch
          sudo apt install -y gcc-aarch64-linux-gnu gcc-arm-linux-gnueabihf  # linkers for ARM targets

      - name: x86_64-unknown-linux-gnu
        env:
          TARGET: x86_64-unknown-linux-gnu
        run: |
          # build and deploy CLI
          rustup target add $TARGET
          cargo build -p tmc-langs-cli --release --verbose --target $TARGET
          gsutil cp target/$TARGET/release/tmc-langs-cli gs://${{ secrets.GCP_BUCKET }}/tmc-langs-rust/tmc-langs-cli-$TARGET-$TAG

          # build and deploy Node module
          npm --prefix ./bindings/tmc-langs-node install
          npm --prefix ./bindings/tmc-langs-node run build -- --release --target $TARGET
          gsutil cp bindings/tmc-langs-node/ts/functions.node         gs://${{ secrets.GCP_BUCKET }}/tmc-langs-rust/tmc-langs-$TARGET-$TAG.node

      - name: i686-unknown-linux-gnu
        env:
          TARGET: i686-unknown-linux-gnu
        run: |
          # build and deploy CLI
          rustup target add $TARGET
          cargo build -p tmc-langs-cli --release --verbose --target $TARGET
          gsutil cp target/$TARGET/release/tmc-langs-cli gs://${{ secrets.GCP_BUCKET }}/tmc-langs-rust/tmc-langs-cli-$TARGET-$TAG

          # build and deploy Node module
          npm --prefix ./bindings/tmc-langs-node install
          npm --prefix ./bindings/tmc-langs-node run build -- --release --target $TARGET
          gsutil cp bindings/tmc-langs-node/ts/functions.node         gs://${{ secrets.GCP_BUCKET }}/tmc-langs-rust/tmc-langs-$TARGET-$TAG.node

      - name: aarch64-unknown-linux-gnu
        env:
          TARGET: aarch64-unknown-linux-gnu
        run: |
          # build and deploy CLI
          rustup target add $TARGET
          cargo build -p tmc-langs-cli --release --verbose --target $TARGET
          gsutil cp target/$TARGET/release/tmc-langs-cli gs://${{ secrets.GCP_BUCKET }}/tmc-langs-rust/tmc-langs-cli-$TARGET-$TAG

          # build and deploy Node module
          npm --prefix ./bindings/tmc-langs-node install
          npm --prefix ./bindings/tmc-langs-node run build -- --release --target $TARGET
          gsutil cp bindings/tmc-langs-node/ts/functions.node         gs://${{ secrets.GCP_BUCKET }}/tmc-langs-rust/tmc-langs-$TARGET-$TAG.node

      - name: armv7-unknown-linux-gnueabihf
        env:
          TARGET: armv7-unknown-linux-gnueabihf
        run: |
          # build and deploy CLI
          rustup target add $TARGET
          cargo build -p tmc-langs-cli --release --verbose --target $TARGET
          gsutil cp target/$TARGET/release/tmc-langs-cli gs://${{ secrets.GCP_BUCKET }}/tmc-langs-rust/tmc-langs-cli-$TARGET-$TAG

          # build and deploy Node module
          npm --prefix ./bindings/tmc-langs-node install
          npm --prefix ./bindings/tmc-langs-node run build -- --release --target $TARGET
          gsutil cp bindings/tmc-langs-node/ts/functions.node         gs://${{ secrets.GCP_BUCKET }}/tmc-langs-rust/tmc-langs-$TARGET-$TAG.node
